;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Sun Aug  7 23:42:15 2011
;; Desktop file format version 206
;; Emacs version 23.2.1

;; Global section:
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '(".column" "show" "fetch" "b_res" "$Log" "fonts" "#bookset" "#bo" "#bookset_con" "taglist_" "if pa" "PUT"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("/home/p/code/a_a_yoga/app/assets/stylesheets/style.css.erb" "/home/p/.emacs.d/init.el" "/home/p/code/a_a_yoga/app/views/layouts/_cities.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_news.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_title.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_news.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_title.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb" "/home/p/code/a_a_yoga/app/assets/stylesheets/application.css" "/home/p/code/a_a_yoga/app/views/layouts/_news.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_news.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_title.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/_header.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/header.html.erb" "/home/p/code/a_a_yoga/app/views/layouts/application.html.erb" "/home/p/code/a_a_yoga/app/assets/stylesheets/pages.css.scss" "/home/p/code/a_a_yoga/app/views/pages/index.html.erb" "/home/p/code/czytoczytamto/helpers.rb" "/home/p/code/nejiro/Gemfile" "/home/p/code/czytoczytamto/Gemfile" "/home/p/code/nejiro/Gemfile" "/home/p/code/czytoczytamto/Gemfile" "/home/p/code/nejiro/spec/booksetentry_spec.rb" "/home/p/code/nejiro/views/bookset/_bookset_interface.haml" "/home/p/code/nejiro/public/js/basket_edit.js" "/home/p/code/nejiro/views/basket/edit.haml"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/assets/stylesheets/style.css.erb"
  "style.css.erb"
  'html-mode
  nil
  1
  '(nil nil)
  nil
  nil
  nil)

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/assets/stylesheets/pages.css.scss"
  "pages.css.scss"
  'css-mode
  nil
  786
  '(167 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/p/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  nil
  308
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/pages/index.html.erb"
  "index.html.erb"
  'html-mode
  nil
  533
  '(44 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/layouts/_cities.html.erb"
  "_cities.html.erb"
  'html-mode
  nil
  222
  '(200 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/layouts/_nav_menu.html.erb"
  "_nav_menu.html.erb"
  'html-mode
  nil
  189
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/layouts/_news.html.erb"
  "_news.html.erb"
  'html-mode
  nil
  645
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/layouts/_title.html.erb"
  "_title.html.erb"
  'html-mode
  nil
  146
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/p/code/a_a_yoga/app/views/layouts/application.html.erb"
  "application.html.erb"
  'html-mode
  nil
  358
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

